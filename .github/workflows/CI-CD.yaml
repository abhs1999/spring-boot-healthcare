name: CI/CD Pipeline

on:
  push:
    branches: [master]

jobs:
  build-test-docker:
    runs-on: ubuntu-latest

    env:
      IMAGE_TAG: build-${{ github.run_number }}
      IMAGE_NAME: ${{ secrets.DOCKER_USERNAME }}/spring-boot-healthcare

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Set up Java 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Compile the code
        run: mvn compile

      - name: Run unit tests
        run: mvn test

      - name: Package the application
        run: mvn clean package

      - name: Upload JAR to GitHub artifacts
        uses: actions/upload-artifact@v4
        with:
          name: spring-boot-healthcare-jar
          path: target/*.jar

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker image with tag
        run: docker build -t $IMAGE_NAME:$IMAGE_TAG .

      - name: Push Docker image to Docker Hub
        run: docker push $IMAGE_NAME:$IMAGE_TAG

      - name: Show pushed image tag
        run: |
          echo "Docker image pushed: $IMAGE_NAME:$IMAGE_TAG"

  deploy-to-kind:
   needs: build-test-docker
   runs-on: ubuntu-latest

   env:
     IMAGE_TAG: build-${{ github.run_number }}
     IMAGE_NAME: ${{ secrets.DOCKER_USERNAME }}/spring-boot-healthcare

   steps:
    - name: Checkout source code
      uses: actions/checkout@v4

    - name: Set up Kind cluster
      uses: helm/kind-action@v1.8.0
      with:
        cluster_name: kind
        wait: 60s
        version: v0.20.0  # optional but recommended for stability

    - name: Verify Kind nodes
      run: kubectl get nodes

    - name: Pull and load Docker image into Kind
      run: |
        docker pull $IMAGE_NAME:$IMAGE_TAG
        kind load docker-image $IMAGE_NAME:$IMAGE_TAG

    - name: Replace image tag in deployment manifest
      run: |
        sed "s|IMAGE_PLACEHOLDER|$IMAGE_TAG|g" k8s/deployment.yaml > k8s/deployment.final.yaml

    - name: Deploy to Kind
      run: |
        kubectl apply -f k8s/deployment.final.yaml
        kubectl apply -f k8s/service.yaml


    - name: Wait for deployment to finish
      run: |
        kubectl rollout status deployment/healthcare-deployment --timeout=60s
        kubectl get all
            
    - name: Port-forward and show health check response
      run: |
        nohup kubectl port-forward svc/healthcare-service 8080:80 > /dev/null 2>&1 &
        sleep 5
        echo "Health check response:"
        curl -s -i http://localhost:8080/health || echo "Health check failed"

